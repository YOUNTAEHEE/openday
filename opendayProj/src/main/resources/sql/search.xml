<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.search">

	<select id="searchSelect"
		resultType="com.kosta.openday.user.dto.CollectDTO"
		parameterType="java.util.Map">
		<choose>



			<when
				test="clsLoc=='all' and startDate==null and clsCode=='all'">
				
	   <include refid="search"></include>
	
			</when>
			<when test="clsLoc=='all' and startDate==null">
				<include refid="search"></include>
				WHERE clsCode=#{clsCode}
				
			</when>
			<when test="clsLoc=='all' and clsCode=='all'">
					<include refid="search"></include>
				WHERE  scdDate between #{startDate} and #{endDate}
				
			</when>
			<when test="startDate==null and clsCode=='all'">
					<include refid="search"></include>
				WHERE clsLoc=#{clsLoc} 
				
			</when>
			<when test="clsLoc=='all'">
					<include refid="search"></include>
				WHERE (scdDate between #{startDate} and #{endDate}) and clsCode=#{clsCode}
				
			</when>
			<when test="startDate==null">
					<include refid="search"></include>
				WHERE clsLoc=#{clsLoc} and clsCode=#{clsCode}
				
			</when>
			<when test="clsCode=='all'">
					<include refid="search"></include>
				WHERE clsLoc=#{clsLoc} and (scdDate between #{startDate} and #{endDate})
				
			</when>
			<otherwise>
					<include refid="search"></include>
				WHERE clsLoc=#{clsLoc} and (scdDate between #{startDate} and #{endDate}) and clsCode=#{clsCode}
				
			</otherwise>
		</choose>
	</select>
  <!-- include -->
   <sql id="search">
     <![CDATA[
    SELECT clsId, clsLoc, clsPrice, clsDiscount, clsName, codName, filNum, reviewCount, finalPrice, avgStar, clsCode, scdDate FROM (
SELECT o.clsId AS clsId, o.clsLoc AS clsLoc, o.clsPrice AS clsPrice, o.clsDiscount AS clsDiscount, o.clsName AS clsName, c.codName AS codName, 
   o.filNum AS filNum, COUNT(r.rvNum) AS reviewCount, o.clsCode as clsCode, s.scdDate as scdDate, round(o.clsPrice - (o.clsPrice * (o.clsDiscount / 100))) AS finalPrice, IFNULL(AVG(r.rvStar),0) AS avgStar, 
         IFNULL((
      SELECT COUNT(*)
      FROM heart h
      WHERE h.clsId = o.clsId
   ), 0) AS heartCnt
FROM oclass o 
LEFT join schedule s on o.clsId = s.clsId
LEFT join review r on r.scdNum = s.scdNum
JOIN code c ON o.clsCode=c.codNum
GROUP BY o.clsId) AS oc
     ]]>
   </sql>
</mapper>