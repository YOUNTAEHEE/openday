<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.user">

	<!--회원가입 -->
	<insert id="insertUser"
		parameterType="com.kosta.openday.user.dto.UserDTO">
		<![CDATA[
			insert into user values 
			(#{userId}, #{userPassword}, #{userName}, #{userNickname}, #{userTel},#{userAddress}, #{userEmail}, #{userBirth},
			'1', null, 'y', CURDATE(), null, '1', null)
		]]>
	</insert>
	<!--선호카테고리 저장 -->
	<update id="updateUserPrefer" parameterType="java.util.Map">
		<![CDATA[
			update user set userPreference = #{prefer} where userId=#{id}  
			
		]]>
	</update>

	<!--선호카테고리 받아오기 -->
	<select id="selectUserPrefer" parameterType="String"
		resultType="String">
		<![CDATA[
			select userPreference from user where userId=#{id} 
		]]>
	</select>

	<!-- 파일업로드(유저프로필) -->
	<insert id="insertUserFile"
		parameterType="com.kosta.openday.adm.dto.FileDTO">
		<![CDATA[

	insert into file values(nextval(file_seq),#{fileClassification},#{fileOriginalName},#{fileSaveName},${fileSize},CURDATE())
		]]>
	</insert>

	<!-- 프로필수정 -->
	<update id="updateUser" parameterType="java.util.Map">
		<![CDATA[
		update user set userNickname=#{nickname}, userTel=#{tel}, filNum=#{filNum} where userId=#{id}
		]]>
	</update>

	<!-- select user -->
	<select id="selectUser" parameterType="String"
		resultType="com.kosta.openday.user.dto.UserDTO">
		<![CDATA[ 		
		select * from user where userId=#{id}
		]]>
	</select>

	<!-- 로그인 -->
	<select id="userLogin" parameterType="java.util.Map"
		resultType="com.kosta.openday.user.dto.UserDTO">
	<![CDATA[
	select * from user where userId=#{userId} and userPassword=#{userPassword}
	]]>

	</select>

	<!-- 아이디찾기폼 -->
	<select id="userFindId" parameterType="String"
		resultType="com.kosta.openday.user.dto.UserDTO"> 
		<![CDATA[ select * from user where userEmail=#{userEmail} ]]>
	</select>
	<!-- 비밀번호찾기폼 -->
	<select id="userFindPw" parameterType="java.util.Map"
		resultType="com.kosta.openday.user.dto.UserDTO"> 
		<![CDATA[ select * from user where userId=#{userId} and userEmail=#{userEmail} 
		]]>
	</select>

	<update id="resetPassword" parameterType="com.kosta.openday.user.dto.UserDTO">
		UPDATE user
		SET password = #{password}
		WHERE id = #{id}
	</update>

	<!-- 메인 클래스 신규리스트 -->
	<!-- 대격변 후 > 평균별점이랑 찜개수 괄호 안에 채워야함 -->
	<select id="mainNewOClassList"
		resultType="com.kosta.openday.user.dto.CollectDTO"> 
		<![CDATA[ 
		SELECT clsId, clsLoc, clsPrice, clsDiscount, clsName, codName, filNum, reviewCount, finalPrice, avgStar, clsCreatedAt, scdNum FROM (
SELECT o.clsId AS clsId, o.clsLoc AS clsLoc, o.clsPrice AS clsPrice, o.clsDiscount AS clsDiscount, o.clsName AS clsName, c.codName AS codName, 
   o.filNum AS filNum, o.clsCreatedAt AS clsCreatedAt, s.scdNum AS scdNum, COUNT(r.rvNum) AS reviewCount, round(o.clsPrice - (o.clsPrice * (o.clsDiscount / 100))) AS finalPrice, IFNULL(AVG(r.rvStar),0) AS avgStar, 
         IFNULL((
      SELECT COUNT(*)
      FROM heart h
      WHERE h.clsId = o.clsId
   ), 0) AS heartCnt
FROM oclass o 
LEFT join schedule s on o.clsId = s.clsId
LEFT join review r on r.scdNum = s.scdNum
JOIN code c ON o.clsCode=c.codNum
GROUP BY o.clsId ) AS oc
WHERE
    clsCreatedAt >= CURRENT_DATE() - INTERVAL 7 DAY
    AND clsCreatedAt <= CURRENT_DATE()
    AND scdNum > 0;
		]]>
	</select>
	<!-- 대격변이전버전 -->
	<!-- <select id="mainNewOClassList" resultType="com.kosta.openday.user.dto.CollectDTO"> 
		<![CDATA[ SELECT o.clsId AS clsId, s.scdLoc AS scdLoc, s.scdDiscount AS scdDiscount, 
		o.clsName AS clsName, c.codName AS codName, o.clsPrice AS clsPrice, o.clsStar 
		AS clsStar, o.clsHeart AS clsHeart, o.filNum AS filNum, (SELECT COUNT(*) 
		FROM review r JOIN schedule s ON r.scdNum = s.scdNum WHERE s.clsId = o.clsId 
		) AS reviewCount, round(o.clsPrice - (o.clsPrice * (s.scdDiscount / 100))) 
		AS finalPrice FROM schedule s JOIN oclass o ON s.clsId = o.clsId JOIN code 
		c ON o.clsCode=c.codNum WHERE o.clsCreatedAt >= CURRENT_DATE() - INTERVAL 
		7 DAY; ]]> </select> -->

	<!-- 핫한 클래스 신규리스트 -->

	<select id="mainHotOClassList" resultType="com.kosta.openday.user.dto.CollectDTO"> 
		<![CDATA[ SELECT clsId, clsLoc, clsPrice, clsDiscount, clsName, codName, filNum, reviewCount, finalPrice, avgStar, clsCreatedAt, scdNum
FROM (
    SELECT o.clsId AS clsId, o.clsLoc AS clsLoc, o.clsPrice AS clsPrice, o.clsDiscount AS clsDiscount, o.clsName AS clsName, c.codName AS codName, 
        o.filNum AS filNum, o.clsCreatedAt AS clsCreatedAt, s.scdNum AS scdNum, COUNT(r.rvNum) AS reviewCount, round(o.clsPrice - (o.clsPrice * (o.clsDiscount / 100))) AS finalPrice, IFNULL(AVG(r.rvStar),0) AS avgStar, 
        IFNULL((
            SELECT COUNT(*)
            FROM heart h
            WHERE h.clsId = o.clsId
        ), 0) AS heartCnt
    FROM oclass o 
    LEFT JOIN schedule s ON o.clsId = s.clsId
    LEFT JOIN review r ON r.scdNum = s.scdNum
    JOIN code c ON o.clsCode = c.codNum
    GROUP BY o.clsId 
) AS oc
WHERE oc.clsId IN (
    SELECT clsId FROM schedule WHERE scdDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) GROUP BY clsId HAVING COUNT(*) >= 2
) ]]> </select>

<!-- 선호클래스 -->
<!-- <select id="mainPreferenceOClassList" resultType="com.kosta.openday.user.dto.CollectDTO"> 
	
 <![CDATA[ SELECT clsId, clsLoc, clsPrice, clsDiscount, clsName, codName, filNum, reviewCount, finalPrice, avgStar, clsCreatedAt, scdNum
FROM (
    SELECT o.clsId AS clsId, o.clsLoc AS clsLoc, o.clsPrice AS clsPrice, o.clsDiscount AS clsDiscount, o.clsName AS clsName, c.codName AS codName, 
        o.filNum AS filNum, o.clsCreatedAt AS clsCreatedAt, s.scdNum AS scdNum, COUNT(r.rvNum) AS reviewCount, round(o.clsPrice - (o.clsPrice * (o.clsDiscount / 100))) AS finalPrice, IFNULL(AVG(r.rvStar),0) AS avgStar, 
        IFNULL((
            SELECT COUNT(*)
            FROM heart h
            WHERE h.clsId = o.clsId
        ), 0) AS heartCnt
    FROM oclass o 
    LEFT JOIN schedule s ON o.clsId = s.clsId
    LEFT JOIN review r ON r.scdNum = s.scdNum
    JOIN code c ON o.clsCode = c.codNum
    GROUP BY o.clsId 
) AS oc
    WHERE s.scdDate >= CURDATE() AND o.clsCode IN
    <foreach collection='list' item='code' open='(' separator=',' close=')'>
        #{code}
    </foreach>
    ORDER BY s.scdDate DESC
</select>
]]> </select> -->

	<!-- 개설요청참여 participation -->

	<select id="selectParticipationList"
		resultType="com.kosta.openday.user.dto.ParticipationDTO">
	<![CDATA[
		SELECT * FROM participation
	]]>
	</select>

	<!-- 글번호로 userID 가져오기 -->
	<select id="selectParticipationByUserId" parameterType="Integer"
		resultType="String">
	<![CDATA[
		SELECT userId FROM participation WHERE reqId = #{reqId} 
	]]>
	</select>

	<!-- 클래스개설요청 request -->

	<select id="selectRequestById" parameterType="Integer"
		resultType="com.kosta.openday.user.dto.RequestDTO">
  <![CDATA[
    SELECT * FROM request WHERE reqId = #{reqId}
  ]]>
	</select>

	<insert id="insertRequest"
		parameterType="com.kosta.openday.user.dto.RequestDTO">
  <![CDATA[
    INSERT INTO request 
    VALUES (nextval(request_seq), #{reqTitle}, #{reqContent}, #{reqDate}, #{reqViews}, #{reqUpdateDate}, #{userId}, #{reqLocation})
  ]]>
	</insert>

	<!-- 참여자와 글번호 삽입 -->
	<insert id="insertParticipation" parameterType="java.util.Map">
	<![CDATA[
		INSERT INTO participation (userId, reqId) VALUES (#{userId}, #{reqId})
	]]>
	</insert>





	<update id="updateRequest"
		parameterType="com.kosta.openday.user.dto.RequestDTO">
  <![CDATA[
    UPDATE request SET
    reqTitle = #{reqTitle},
    reqContent = #{reqContent},
    reqDate = #{reqDate},
    reqViews = #{reqViews},
    requestUpdateDate = #{reqUpdateDate},
    userId = #{userId},
    reqLocation = #{reqLocation}
    WHERE reqId = #{reqId}
  ]]>
	</update>

	<delete id="deleteRequestById" parameterType="Integer">
  <![CDATA[
    DELETE FROM request WHERE reqId = #{requestId}
  ]]>
	</delete>



	<!-- 댓글 reply -->
	<!-- <select id="selectReplyByKey" parameterType="int" resultType="ReplyDTO"> 
		<![CDATA[ SELECT * FROM reply WHERE key = #{replyKey} ]]> </select> <insert 
		id="insertReply" parameterType="ReplyDTO"> <![CDATA[ INSERT INTO reply (key, 
		re_title, re_content, re_date, req_id) VALUES (#{replyKey}, #{replyTitle}, 
		#{replyContent}, #{replyDate}, #{requestId}) ]]> </insert> <update id="updateReply" 
		parameterType="ReplyDTO"> <![CDATA[ UPDATE reply SET re_title = #{replyTitle}, 
		re_content = #{replyContent}, re_date = #{replyDate}, req_id = #{requestId} 
		WHERE key = #{replyKey} ]]> </update> -->

	<select id="selectHeartList" parameterType="String"
		resultType="com.kosta.openday.user.dto.HeartDTO">
	<![CDATA[
		select * from heart where userId=#{userId}
		]]>
	</select>

	<!-- <select id="selectHeartOClass" parameterType="Integer" resultType="com.kosta.openday.user.dto.CollectDTO"> 
		<![CDATA[ SELECT s.scdLoc AS scdLoc, s.scdDiscount AS scdDiscount, o.clsName 
		AS clsName, c.codName AS codName, o.clsPrice AS clsPrice, o.clsStar AS clsStar, 
		o.clsHeart AS clsHeart, o.filNum AS filNum, ( SELECT COUNT(*) FROM review 
		WHERE s.clsId = o.clsId ) AS reviewCount, (o.clsPrice - (o.clsPrice * (s.scdDiscount 
		/ 100))) AS finalPrice FROM schedule s JOIN oclass o ON s.clsId = o.clsId 
		JOIN code c ON o.clsCode=c.codNum where s.scdNum= #{scdNum} ]]> </select> -->
	<!-- 회원탈퇴 -->
	<update id="updateUserDelete" parameterType="String">
	<![CDATA[
		update user set userActivation = '0' where userId=#{id}
	]]>
	</update>




</mapper>